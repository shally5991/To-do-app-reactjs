{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","completeTodo","deleteTodo","className","style","textDecoration","isComplete","text","onClick","TodoForm","adtodo","useState","value","setvalue","onSubmit","e","preventDefault","type","placeholder","onChange","target","App","todos","settodos","newtodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAGA,SAASA,EAAT,GAAoD,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,MAAMC,EAAyB,EAAzBA,aAAaC,EAAY,EAAZA,WACvC,OACE,sBACEC,UAAU,OACVC,MAAO,CAAEC,eAAgBN,EAAKO,WAAa,eAAiB,IAF9D,UAIGP,EAAKQ,KACN,sBAAKJ,UAAU,SAAf,UACE,wBAAQK,QAAS,kBAAIN,EAAWF,IAAhC,eACA,wBAAQQ,QAAS,kBAAMP,EAAaD,IAApC,4BAMN,SAASS,EAAT,GAA4B,IAATC,EAAQ,EAARA,OAAQ,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAQzB,OACE,sBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACEJ,IACJF,EAAOE,GACPC,EAAS,MAGqBV,UAAU,iBAAxC,SACE,uBACEc,KAAK,OACLC,YAAY,YACZf,UAAU,QACVS,MAAOA,EACPO,SAAU,SAACJ,GAAD,OAAOF,EAASE,EAAEK,OAAOR,YAmD5BS,MA7Cf,WAAgB,IAAD,EACWV,mBAAS,CACjC,CACEJ,KAAK,oBACLD,YAAW,GAEb,CACEC,KAAK,oBACLD,YAAW,GAEb,CACEC,KAAK,oBACLD,YAAW,KAZA,mBACRgB,EADQ,KACDC,EADC,KAuBTtB,EAAe,SAAAD,GACnB,IAAMwB,EAAQ,YAAOF,GACrBE,EAASxB,GAAOM,YAAckB,EAASxB,GAAOM,WAC9CiB,EAASC,IAELtB,EAAa,SAAAF,GACjB,IAAMwB,EAAQ,YAAOF,GACrBE,EAASC,OAAOzB,EAAM,GACtBuB,EAASC,IAGT,OACE,sBAAKrB,UAAU,MAAf,UACE,cAACM,EAAD,CAAUC,OAnBD,SAACH,GACd,IAAMiB,EAAQ,sBAAOF,GAAP,CAAc,CAACf,UAC7BgB,EAASC,MAkBL,qBAAKrB,UAAU,YAAf,SACGmB,EAAMI,KAAI,SAAC3B,EAAMC,GAAP,OACT,cAACF,EAAD,CAAkBE,MAAOA,EAAOD,KAAMA,EAAMG,WAAYA,EAAYD,aAAcA,GAAvED,YClEN2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.14120d8d.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css'\n\nfunction Todo({todo,index,completeTodo,deleteTodo}){\nreturn (\n  <div\n    className=\"todo\"\n    style={{ textDecoration: todo.isComplete ? \"line-through\" : \"\" }}\n  >\n    {todo.text}\n    <div className=\"button\">\n      <button onClick={()=>deleteTodo(index)}>x</button>\n      <button onClick={() => completeTodo(index)}>Complete</button>\n    </div>\n  </div>\n);\n}\n\nfunction TodoForm({adtodo}){\n  const [value, setvalue] = useState(\"\");\n  const handleSubmit = (e) =>{\n    e.preventDefault(); \n    if(!value) return;\n    adtodo(value);\n    setvalue(\"\");\n  }\n  return (\n    <form onSubmit={handleSubmit} className=\"todo todo-form\">\n      <input\n        type=\"text\"\n        placeholder=\"Add to-do\"\n        className=\"input\"\n        value={value}\n        onChange={(e) => setvalue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction App() {\nconst [todos, settodos] = useState([\n  {\n    text:'Make list of todo',\n    isComplete:false\n  },\n  {\n    text:'Make list of todo',\n    isComplete:false\n  },\n  {\n    text:'Make list of todo',\n    isComplete:false\n  }\n\n])\n\nconst adtodo = (text) =>{\n  const newtodos = [...todos, {text}]\n  settodos(newtodos);\n\n}\n\nconst completeTodo = index => {\n  const newtodos = [...todos];\n  newtodos[index].isComplete = !newtodos[index].isComplete;\n  settodos(newtodos);\n}\nconst deleteTodo = index => {\n  const newtodos = [...todos];\n  newtodos.splice(index,1);\n  settodos(newtodos);\n}\n\n  return (\n    <div className=\"app\">\n      <TodoForm adtodo={adtodo} />\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo key={index} index={index} todo={todo} deleteTodo={deleteTodo} completeTodo={completeTodo}  />\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}